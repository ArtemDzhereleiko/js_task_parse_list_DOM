{"version":3,"sources":["scripts/main.js"],"names":["peoplesList","document","querySelector","listOfPeoples","querySelectorAll","sortList","peopleList","sortedPeoples","salary","toNumber","dataset","slice","split","join","sort","currentEmployee","nextEmployee","currentEmployeeSalary","nextEmployeeSalary","append","getEmployees","arrayOfPeoples","map","person","name","innerText","position","age"],"mappings":";AAAA,aAoCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlCA,IAAMA,EAAcC,SAASC,cAAc,MACrCC,EAAgBF,SAASG,iBAAiB,MAEhD,SAASC,EAASC,GACVC,IAAAA,EAAoBD,EAAAA,GAEpBE,EAAS,SAACC,GACP,OAACA,EAASC,QAAQF,OAAOG,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAG3DN,EAAcO,KAAK,SAACC,EAAiBC,GAC7BC,IAAAA,EAAwBT,EAAOO,GAG9BG,OAFoBV,EAAOQ,GAENC,IAG9BjB,EAAYmB,OAAZnB,MAAAA,EAAsBO,EAAAA,IAGxB,SAASa,EAAad,GAGbe,OAFoBf,EAAAA,GAELgB,IAAI,SAAAC,GACjB,MAAA,CACLC,KAAMD,EAAOE,UACbC,SAAUH,EAAOb,QAAQgB,SACzBlB,OAAQe,EAAOb,QAAQF,OACvBmB,IAAKJ,EAAOb,QAAQiB,OAK1BtB,EAASF,GACTiB,EAAajB","file":"main.6b33d458.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst peoplesList = document.querySelector('ul');\nconst listOfPeoples = document.querySelectorAll('li');\n\nfunction sortList(peopleList) {\n  const sortedPeoples = [...peopleList];\n\n  const salary = (toNumber) => {\n    return +toNumber.dataset.salary.slice(1).split(',').join('');\n  };\n\n  sortedPeoples.sort((currentEmployee, nextEmployee) => {\n    const currentEmployeeSalary = salary(currentEmployee);\n    const nextEmployeeSalary = salary(nextEmployee);\n\n    return nextEmployeeSalary - currentEmployeeSalary;\n  });\n\n  peoplesList.append(...sortedPeoples);\n};\n\nfunction getEmployees(peopleList) {\n  const arrayOfPeoples = [...peopleList];\n\n  return arrayOfPeoples.map(person => {\n    return {\n      name: person.innerText,\n      position: person.dataset.position,\n      salary: person.dataset.salary,\n      age: person.dataset.age,\n    };\n  });\n}\n\nsortList(listOfPeoples);\ngetEmployees(listOfPeoples);\n"]}